@using Entities
@using Business

    <hr />
        <select class="form-control" @onchange="CategoryChange">
            <option value="">Seleccione categoría</option>
            @foreach (var category in categories)
            {
                <option value="@category.CategoryId">@category.CategoryName</option>
            }
        </select>
    <hr />

    <table class="table table-hover table-border">
        <thead>
            <tr>
                <th>Referencia</th>
                <th>Nombre producto</th>
                <th>Categoria</th>
                <th>Cantidad</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in tempProducts)
            {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.CategoryId</td>
                <td>@product.TotalQuatity</td>
                <td><a href="product/update/@product.ProductId">Editar</a></td>
            </tr>
            }
        </tbody>
    </table>
    @message

 @code {
     List<ProductEntity> products = new List<ProductEntity>();
     List<ProductEntity> tempProducts = new List<ProductEntity>();
     List<CategoryEntity> categories = new List<CategoryEntity>();

     string message;

     protected override async Task OnInitializedAsync()
     {
         products = ProductBusiness.ProductList();
         tempProducts = products;
         categories = CategoryBusiness.CategoryList();
     }

     private void CategoryChange (ChangeEventArgs e)
     {
         //message = e.Value.ToString();
         tempProducts = products.Where(c => c.CategoryId == e.Value.ToString()).ToList();
     }
}
